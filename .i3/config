set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below. ISO 10646 = Unicode
#font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
font terminus:size=8

# Colors! (ME)
set $blue #005588
set $red1 #8c664c
set $red2 #9f7155
set $black1 #332d29
set $black2 #817267
set $magenta1 #766872
set $magenta2 #897796
set $cyan1 #4b5c5e
set $cyan2 #556d70
set $white1 #504339
set $white2 #9a875f

# Set window borders
#class                          border  bg      text    indicator
client.focused                  $black2 #92ac68   #D8C3B6 $magenta2
client.focused_inactive         $black1 $black1 $white2 $cyan2
client.unfocused                $black1 $black1 $white2 $cyan2
client.urgent                   $red2   $red2   #FFFFFF $red2

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec urxvtc

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run -q -b -l 5 -w 200  -x 5 -y 5 -nb '#556d70' -sb '#92ac68' -sf '#222222' -p '>>>' -nf '#ffffff' -sf '#ffffff'
bindsym $mod+d exec dmenu_run

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+z focus child

# scratchpad shiz
bindsym $mod+i scratchpad show
bindsym $mod+Shift+i move scratchpad
#bindsym $mod+o [instance="cmus"] scratchpad show

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# more switching (ME)
bindsym $mod+F1 workspace 5
bindsym $mod+F2 workspace 6
bindsym $mod+F3 workspace 7
bindsym $mod+F4 workspace 8

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# more moving (ME)
bindsym $mod+Shift+F1 move container to workspace 5
bindsym $mod+Shift+F2 move container to workspace 6
bindsym $mod+Shift+F3 move container to workspace 7
bindsym $mod+Shift+F4 move container to workspace 8

# workspace screens (ME)
workspace 1 output LVDS1
workspace 2 output LVDS1
workspace 3 output LVDS1
workspace 4 output LVDS1
workspace 5 output HDMI1
workspace 6 output HDMI1
workspace 7 output HDMI1
workspace 8 output HDMI1	

# back and forth
workspace_auto_back_and_forth yes

# volume stuff
bindsym $mod+F12 exec amixer -q set Master 5%+
bindsym $mod+F11 exec amixer -q set Master 5%-
bindsym $mod+F10 exec amixer -q set Master toggle

# backlight
bindsym XF86MonBrightnessUp exec /usr/bin/xbacklight -inc 20
bindsym XF86MonBrightnessDown exec /usr/bin/xbacklight -dec 20
bindsym $mod+F5 exec xbacklight -dec 10
bindsym $mod+F6 exec xbacklight -inc 10

#trackpad toggle
bindsym $mod+F9 exec ~/bin/trackpad-toggle.sh

# cmus controls
#bindsym $mod+MOD1+Down exec cmus-remote -u
#bindsym $mod+MOD1+Right exec cmus-remote -n
#bindsym $mod+MOD1+Up exec cmus-remote -s
#bindsym $mod+MOD1+Left exec cmus-remote -C player-prev

# mpd ncmpcpp controls
bindsym $mod+MOD1+Down exec ncmpcpp toggle
bindsym $mod+MOD1+Right exec ncmpcpp next
bindsym $mod+MOD1+Up exec ncmpcpp stop
bindsym $mod+MOD1+Left exec ncmpcpp prev

bindsym $mod+o exec urxvtc -name ncmpcpp -g 128x36 -e ncmpcpp -s media-library &
for_window [class="^URxvt$" instance="ncmpcpp"] floating enable

#open ranger file-Manager
bindsym $mod+m exec /usr/bin/urxvtc -e /usr/bin/ranger

#open Cmus music player on Scratchpad at start
#bindsym $mod+c exec /usr/bin/urxvtc -e /usr/bin/cmus
#for_window [class="^URxvt$" instance="cmus"] move scratchpad

#for dwb text entry in vim
for_window [class="^URxvt$" instance="dwb"] floating enable

#lock with colour (now using i3lock-wrapper instead)
#bindsym $mod+Shift+x exec /usr/bin/i3lock -c 202020

#open chromium
#bindsym $mod+i exec chromium

#attach tmux
bindsym $mod+t exec urxvtc -e bash -c "tmux -q has-session && exec tmux attach-session -d || exec tmux new-session -n$USER -s$USER@$HOSTNAME"

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter, q, or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym q mode "default"
}

bindsym $mod+r mode "resize"

bar {
        mode dock
        tray_output primary
        position top
        output LVDS1
        #status_command ~/.i3/conky
        status_command i3status -c ~/.i3/i3status.conf
        font pango:terminus 12px
        colors {
                statusline #AAAAAA
                background #151515
                                  #border background text
                focused_workspace $black2 $white2 $black1
                active_workspace $black2 $white1 $white2
                inactive_workspace $black2 $black1 $white2
                urgent_workspace $red2 $red1 #FFFFFF
        }
}

bar {
        mode dock
        output HDMI1
        position top
        tray_output none
        font pango:terminus 12px
        #status_command ~/.i3/conky
        status_command i3status -c ~/.i3/i3status.conf
        colors {
                #statusline #AAAAAA
                background #151515
                focused_workspace $black2 $white2 $black1
                active_workspace $black2 $white1 $white2
                inactive_workspace $black2 $black1 $white2
                urgent_workspace $red2 $red1 #FFFFFF
        }
}

set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id ~/.i3/i3exit.sh lock, mode "default"
    bindsym e exec --no-startup-id ~/.i3/i3exit.sh logout, mode "default"
    bindsym s exec --no-startup-id ~/.i3/i3exit.sh suspend, mode "default"
    bindsym h exec --no-startup-id ~/.i3/i3exit.sh hibernate, mode "default"
    bindsym r exec --no-startup-id ~/.i3/i3exit.sh reboot, mode "default"
    bindsym Shift+s exec --no-startup-id ~/.i3/i3exit.sh shutdown, mode "default"

    # back to normal
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym q mode "default"
    bindsym $mod+Pause mode "default"
}
bindsym $mod+Pause mode "$mode_system"

set $mode_monitors Monitors (L) laptop, (M) monitor, (D) dual, (S) same, (b) bright, (d) dark, (m) movie, (u) unmovie
mode "$mode_monitors" {
    bindsym Shift+l exec --no-startup-id ~/bin/monitor_management.sh laptop, mode "default"
    bindsym Shift+m exec --no-startup-id ~/bin/monitor_management.sh monitor, mode "default"
    bindsym Shift+d exec --no-startup-id ~/bin/monitor_management.sh dual, mode "default"
    bindsym Shift+s exec --no-startup-id ~/bin/monitor_management.sh same, mode "default"
    bindsym b exec --no-startup-id ~/bin/monitor_management.sh light_monitor, mode "default"
    bindsym d exec --no-startup-id ~/bin/monitor_management.sh dark_monitor, mode "default"
    bindsym m exec --no-startup-id ~/bin/monitor_management.sh movie, mode "default"
    bindsym u exec --no-startup-id ~/bin/monitor_management.sh unmovie, mode "default"

    # back to normal
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym q mode "default"
}
bindsym $mod+F8 mode "$mode_monitors"

# window inset?
new_window pixel 2

# mouse focus
focus_follows_mouse no

# autostart file for some other gubbins
exec ~/.i3/autostart.sh

